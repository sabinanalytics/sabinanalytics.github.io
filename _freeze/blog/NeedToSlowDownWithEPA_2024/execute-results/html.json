{
  "hash": "4ab2e0b3b5a2b1149ff67fa0676840fb",
  "result": {
    "markdown": "---\ntitle: \"Are We Using EPA too Much?\"\nauthor: \"Paul Sabin\"\nformat: html\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(nflfastR)\nlibrary(ggridges)\n# library(plotly)\noptions(tibble.width = Inf)\n\ntotal_seasons <- 13\ncross_validate <- FALSE#if true, run through and cross validate, if not fit model on all seasons\nnfl_schedule <- nflreadr::load_schedules()\nmax_season <- max(nfl_schedule$season)\nall_seasons <- (max_season - total_seasons + 1):max_season\n\nnfl_pbp <- load_pbp(all_seasons)\n# player_yearly_salary <- get_nfl_player_contract_by_season(nfl_contracts)\n\n## fix known bad \"end_yardline\" value\nnfl_pbp <- nfl_pbp %>% \n  mutate(end_yard_line = replace(end_yard_line, end_yard_line == \"GB -126\", \"GB 18\"))\n\n\nnfl_pbp_simple <- nfl_pbp %>% \n  mutate(half = ceiling(qtr / 2),\n         loc = case_when(tolower(location) == \"neutral\" ~ \"n\",\n                         posteam == home_team ~ 'h',\n                         posteam == away_team ~ 'a',\n                         TRUE ~ NA_character_),\n         turnover = if_else(fumble_lost == 1 | interception == 1, 1, 0),\n         current_tot_score = posteam_score + defteam_score\n         ) %>% \n  dplyr::select(season,\n                game_id,\n                play_id,\n                series,\n                series_success,\n                posteam,\n                defteam,\n                home_team,\n                # away_team,\n                play_type,\n                special_teams_play,\n                passer,\n                passer_id,\n                name,\n                id,#generic if for passing & rushing\n                qb_kneel,\n                qb_spike,\n                penalty,\n                turnover,\n                fumble_lost,\n                interception,\n                touchdown,\n                pass_attempt,\n                rush_attempt,\n                roof,\n                surface,\n                temp,\n                wind,\n                yards_gained,\n                current_tot_score,\n                current_score_diff = score_differential,\n                epa,\n                ep,\n                wpa,\n                wp,\n                vegas_wp,\n                loc,\n                # location,\n                qb_dropback,\n                half_seconds_remaining,\n                half,\n                qtr,\n                yardline_100,\n                down,\n                ydstogo,\n                play_clock,\n                posteam_timeouts_remaining,\n                defteam_timeouts_remaining\n                )\n```\n:::\n\n\n\nLet's look at 3rd and 5 rates in the first half of games.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#add in any and any with rush\nnfl_pbp_simple <- nfl_pbp_simple %>% \n  mutate(tot_adjusted_net_yds = yards_gained + 20*touchdown - 45*turnover)\n\n\nqb_avg_by_season <- nfl_pbp_simple %>% \n  filter(half == 1,\n         down == 3, \n         ydstogo <= 5,\n         # pass_attempt == 1,\n         qb_dropback == 1,\n         qb_spike == 0,\n         penalty == 0) %>% \n  group_by(season,\n           name,\n           id) %>% \n  summarize(plays = n(),\n            epa_play = mean(epa),\n            yds_play = mean(yards_gained),\n            tot_any_play = mean(tot_adjusted_net_yds)\n            ) %>% \n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'season', 'name'. You can override using\nthe `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nqb_avg_by_season %>% \n  filter(plays >= 25) %>% \n  arrange(desc(epa_play))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 279 × 7\n   season name       id         plays epa_play yds_play tot_any_play\n    <int> <chr>      <chr>      <int>    <dbl>    <dbl>        <dbl>\n 1   2021 P.Mahomes  00-0033873    37    0.955     9.11         11  \n 2   2022 J.Hurts    00-0036389    29    0.893    12.3          13.7\n 3   2014 P.Manning  00-0010346    38    0.891     8.37         13.1\n 4   2018 P.Mahomes  00-0033873    30    0.847     9.13         11.8\n 5   2017 C.Wentz    00-0032950    25    0.812    10.3          10.9\n 6   2019 D.Carr     00-0031280    39    0.799     8.54         11.5\n 7   2022 G.Smith    00-0030565    34    0.725     9.97         13.5\n 8   2021 A.Rodgers  00-0023459    42    0.703    10.4          13.2\n 9   2021 D.Prescott 00-0033077    38    0.690     7.89         11.1\n10   2019 P.Mahomes  00-0033873    27    0.684     9.26         13.0\n# ℹ 269 more rows\n```\n:::\n:::\n\n\nSorted by EPA per play the top of this list looks very reasonable. Patrick Mathomes, Jalen Hurts, and Peyton Manning all at the top but then we get into some interesting names that we don't typically think of when it comes to leading an NFL leaderboard of Quarterbacks like Carson Wentz, Derek Carr, and Geno Smith.\n\nSure, these are smaller sample sizes because I'm filtering down, but this whole exercise is to examine what happens to EPA when we filter down. \n\nNow let's look how each of these stats do in comparison to year to year correlation (i.e. stability). \n\n\n::: {.cell}\n\n```{.r .cell-code}\nqb_season_stability <- qb_avg_by_season %>% \n  filter(plays >= 25) %>% \n  arrange(id,\n          season) %>% \n  pivot_longer(cols = ends_with(\"_play\"),\n               values_to = \"value\", \n               names_to = \"stat\") %>% \n  group_by(id,\n           stat) %>% \n  mutate(lag_value = lag(value)) %>% \n  filter(!is.na(lag_value)) %>%\n  group_by(stat) %>% \n  summarize(stability = cor(value, lag_value) )\n\nqb_season_stability\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  stat         stability\n  <chr>            <dbl>\n1 epa_play       0.00275\n2 tot_any_play   0.0104 \n3 yds_play       0.0992 \n```\n:::\n:::\n\n\nSure none of these have high year to year correltation, but 0.10 is still a lot higher than 0.00275! Why do we observe this? ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}